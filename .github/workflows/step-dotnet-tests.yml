on:
  workflow_call:
    inputs:
      disableSonarQube:
        required: false
        type: boolean
        default: false
      dotnet-logging:
        required: false
        type: string
        default: minimal
      dotnet-testfilter:
        required: false
        type: string
        default: ''
      dotnet-version:
        required: false
        type: string
        default: 7.x
      dotnet-quality:
        required: false
        type: string
        default: ga
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      solution:
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:
        required: false

env:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
    DOTNET_NOLOGO: true

jobs:
  testing:
    name: Testing
    runs-on: ${{ inputs.runs-on || 'ubuntu-latest' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
        dotnet-quality: ${{ inputs.dotnet-quality }}

    - name: Set up JDK 11
      if: inputs.disableSonarQube == false
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'zulu'

    - name: Install SonarCloud scanner
      if: inputs.disableSonarQube == false
      shell: pwsh
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

    - name: Start SonarQube
      if: inputs.disableSonarQube == false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: pwsh
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ secrets.SONAR_PROJECT }}" /o:"${{ secrets.SONAR_ORGANIZATION }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

    - name: Restore dependencies
      run: dotnet restore ${{ inputs.solution }} -v ${{ inputs.dotnet-logging }}

    - name: Test
      if: ${{ inputs.dotnet-testfilter == ''  }}
      run: dotnet test ${{ inputs.solution }} -c Release -v ${{ inputs.dotnet-logging }} --no-restore --collect:"XPlat Code Coverage"

    - name: Test
      if: ${{ inputs.dotnet-testfilter != '' }}
      run: dotnet test ${{ inputs.solution }} -c Release -v ${{ inputs.dotnet-logging }} --no-restore --collect:"XPlat Code Coverage" --filter "TestCategory=${{ inputs.dotnet-testfilter }}"

    - name: Start SonarQube
      if: inputs.disableSonarQube == false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: pwsh
      run: |
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    - name: Update codecov
      uses: codecov/codecov-action@v3
      env:
        codecov_token: ${{ secrets.CODECOV_TOKEN }}
      if: env.codecov_token != ''
      with:
        token: ${{ env.codecov_token }}
        fail_ci_if_error: true
